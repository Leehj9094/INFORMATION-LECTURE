03.10

 13일 시험 
- 높이 별쌓기
- 다이아몬드 높이 H
- 그림보고 클래스 만들기 (객체지향 Ch08) 
- 자바스크립트 closer 

---------------------------------------------------------------
API (Applicaton Programming Interface)
- 라이브러리로 프로그램에서 자주 사용되는 클래스 및 인터페이스의 모음

자바API 
java.lang / java.util : 자바 언어 주요 요소
Collections(import 자주 자용할거임)
Input&output : 입출력 관련 주요 기능을 제공하는 (파일 업로드 다운 등)
Date and Time(java.util/java.text) 
JDBC(import 중요함 반드시 숙지하라고)

기본 API 클래스
1. Object.class
- 최상위 클래스
: notify / wait -> 스레드 파트일때 사용할거임

toString : 객체가 가지고 있는 정보나 값들을 문자열로 만들어 리턴하는 메소드
일반적으로 그 객체를 설명해주는 문자열을 리턴

equals : Object에 선언되어 있는 메소드를 동일 객체인지 동등비교 시 사용
동일 시 True, 동일하지 않을 경우 False를 반환
- String 타입의 변수를 비교할 때 가장 많이 사용됨
- 문자열이 아닌 클래스 자료형일 때는 비교할 대상의 객체 주소를 이용하여
비교 (== / equals() 는 같다고 보면 됨)

HashCode : 객체의 해쉬코드를 반환하는 메소드
- hashcode는 객체의 주소를 int로 변환하여 반환
- 메소드를 사용하여 주어진 키에 대한 해시 값을 계산하고 내부적으로
  이 값을 사용하여 데이터를 저장하기에 접근할 때 훨씬 더 효율적임.

-> equals 와 hashcode는 결과가 같은 객체로 나와야 함
    두 메서드를 함께 재정의하지 않으면 해시 기반 컬렉션을 올바르게 사용 X,
    예상치 못한 동작이 발생할 수 있음(hash 충돌, 동등성 비교 오류 등)

2. Wrapper Class
- 자바의 기본 자료형을 객체 타입으로 처리
- String과 같이 변수에 대입하는 형태로 사용 및 
  new를 이용하여 새로운 객체를 생성하는 형태로 사용
(자바에서는 Wrapper 클래스에 Auto Boxing / UnBoxing을 지원함)
- null check 중요

throws ParseException : 고의로 Exception을 발생하는 키워드
throw VS throws
throw : 예외를 고의로 발생하는 키워드
throws : 메서드 내부에서 발생한 예외를 메서드 외부로 던지는 키워드

parse : 일부 문자열을 입력으로 받고 필요한 정보를 추출하여 호출 
클래스의 객체로 변환 


예외처리(Exception Handling)
- 프로그램 실행 시 발생할 수 있는 예외의 발생에 대비한 코드를 작성하는 것
- 프로그램의 비정상 종료를 막고, 정상적인 실행상태를 유지
- 예외객체가 만들어지기 위해 
예외란? 
- 경미한(파악이 가능한) 형태의 런타임 에러
runtime error : 실행할 때 발생되는 에러

오류
system error : 

예외 처리를 위한 코드 
try {
예외가 발생할 만한 코드
} catch() {
예외 처리를 위한 루틴
} finally{
무조건 처리하는 루틴}

generic
: 클래스 내부에서 지정하는 것이 아닌 외부에서 사용자에 의해 지정되는 
것을 의미
- 특정 타입을 미지 지정해주는 것이 아닌 필요에 의해 지정할 수 있도록
하는 일반타입
- 지정되어 있다는 것보다는 타입으 경계를 지정하고 컴파일 때 해당 타입으로 캐스팅하여 매개변수화 된 유형
<T> - Type , <E> Element , <K> Key , <V> Value , <N> Number
< > -> 다이아몬드 ㅇㅇㅇ