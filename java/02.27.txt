02.27

조건문 : 조건에 따라 코드의 실행 흐름을 다르게 동작하도록 제어하는 
- 주어진 조건을 판단하여 조건에 만족하면 지정된 명령 실행, 벗 만족하지 못할 경우는 명령을 실행하지 않음
if : 조건식의 결과가 true 또는 false 에 따라 실행여부가 결정됨
조건이 하나일 경우 if를 사용

if else : 조건이 두 개일 경우 사용

if else if : 조건문이 여러 개일 경우 사용 되는데 제한은 없고 여러 개 조건식 중 참(true)이 되는 블록만 실행하고 조건을 벗어나게 됨
else if문 마지막에는 else 를 추가할 수 잇지만 모든 조건식이 거짓(false)일 경우 else 를 실행하고 벗어나게 됨

switch
- 변수가 어떤 값을 갖느냐에 따라 실행문이 결정됨
- 가독성이 높은 좋은 코드를 작성할 수 있음
- 변수의 값에 따라 실행문이 결정되므로 같은 기능의 if문 보다 코드가 간결
- case로 가서 실행문을 실행 (case 가 없다면 default로 가서 실행 - default생략 가능함)
- case 블럭은 마지막에 break을 반드시 작성해야 함
(벗! default 일때는 break사용 안함)
<break?
+ 메소드, 반복문, switch, 명령문을 종료하는 역할
+ 하위에 있는 명령문을 실행하지 않고 코드 블록을 벗어나게 함
+ 만나는 즉시 for문을 종료하고 다음 실행문으로 넘어감
>
- 조건식을 넣을 수 없고 상수만 가능함 

-----------------------------------------------------
while 문
- 
- 반복문
- 조건이 참(true)이면 반복문에 계속 실행되지만 
  조건이 거짓(false)이면 반복문은 종료됨
- 조건문에서 빠져나가기 위해선 break를 사용
(System.out.println("커피가 다 떨어졌습니다. 판매를 중지합니다."); break;) - 끊고자 하는 마지막 조건 뒤에 break를 붙임
 
다시 돌아가고 싶으면 "continue"








