03.11

properties?
- 
등호 = value

컬렉션 (collection)
- 

컬렉션 프레임워크 ?
: 다수의 데이터를 쉽고 효과적으로 처리할 수 있는 클래수
- 저장하는 자료 구조와 데이터를 처리하는 알고리즘을 구조화하여 클래스로 
구현

List Interface
- 중복이 가능함
- 순서가 있는 데이터 집합

Set Interface 
- 중복 X
- 순서가 없는 데이터 집합

Map Interface 
- 제일 많이 사용
- 키와 제일 많이 쓰임(한쌍)
- 키가 set을 통해 만들어 짐 - 키를 저장할땐 Set이 사용됨 but 값은 중복가능

List 컬렉션 ----------------------------------------------------
추가 add / 변경 set / 삭제 remove

ArrayList<> : 연속적인 데이터(빈공간X)의 리스트
- 인덱스를 이용해 요소에 빠르게 접근할 수 있음
- 데이터의 크기에 따라 공간을 늘리거나 줄일 수 있음
- 배열을 복사하는 방식으로 늘리는데 이때마다 지연이 됨
- 요소들의 위치를 앞뒤로 이동 시켜 삽입&삭제 동작이 느림
(요소를 추가할 때 객채를 생성할 때 지정된 타입의 데이터만 추가 가능
 = 용량(capacity) / 크기(size) )
<IndexOutOfBoundsException : >

Vector : 항상 동기화가 되어있으며 컬렉션에 없는 메서드들을 사용 가능함
- 스레드가 아닌 환경에서는 거의 사용되지 않음
- 동기화로 인해 추가, 검색, 삭제의 성능은 떨어짐
- Class, Integer, String, Charater 등 다양하게 선언이 가능함

Set 컬렉션 ----------------------------------------------------
 
Iterator : 반복자
arrayList 나 hashcode와 같은 컬렉션을 반복하는 데 사용할 수 있는 객체

Map 컬렉션 ---------------------------------------------------

map <String , Object > params


ui----------------------------------------------------------------
쓸일 거의 없음
GUI

