02.25

자료형
실수
float(32bit) : 실수 리터럴 뒤에 f 또는 F를 붙여야 사용 가능함
소수 5자리까지만 정확하게 표현 그 이상은 정확하게 표현하지 못함
double(64bit) : 자바의 실수 타입 기본 처리
소수 14자리 까지 오차없이 표현 가능

소수점
고정 소수점 
- 표현할 수 있는 범위가 매우 적음 / 다 쓰지 않아도 모두 사용하기에 낭비되는 공간도 많음
- 소수부의 자릿수를 미리 정하고 고정된 자릿수의 소수를 표현하기에 직관적임
정수부와 소수부로 고정으로 나누고 지정함

부동 소수점 (현재)
- 직관적이지 않아 고정된 값을 쓰지 않고 유연하게 사용됨 /큰 범위의 값을 표현하기에 유용함
배정도 (부호, 가수부, 지수부)
- 부호
- 가수부 : 실제 실수 데이터 값을 표현하는 부분 
(10진수로 float은 7자리 / double은 15자리)
- 지수부 : 소수점의 위치를 가리키는 제곱승이 들어감
자릿수 크기를 나타내는 부분

단일문자 
char(문자형 , 2byte) - 양수 값으로만 가능함 / ' ' 사용
- c를 정수로 변환하여 int타입으로 형 변환을 해줌
- 할당된 문자 리터럴이 저장될 때 아스키코드값으로 치환 되고 연산자를 이용하여 int로 변형 발생
- 나타낼 수 있는 방법 : ASCII코드, 유니코드, 문자 
(char c1 = 'a';	/ char c2 = 97;	/ char c3 = '\u0061';)-> 순서대로 나타낼 수 있음

String(문자열)
- 문자열 리터럴을 선언할 때 리터럴이 같으면 변수는 같은 참조값 으로 할당을 받아 반환되는 것 ==
- 문장으로써 문자 및 단어 등으로 구성된 문자들의 집합
- 클래스 자료형(String)
- 기본자료형(int, double, boolean) 

boolean(논리형)
- 주로 프로그램의 흐름을 제어하는 변수로 사용됨
true / false 논리값을 반환함

상수
- 변하지 말아야 할 데이터를 임시적으로 저장하기 위한 수단으로 사용됨
리터럴 상수
: 변수의 값이 변하지 않는 데이터 (메모리 위치 안의 값)
: 데이터 그 자체
: 변하지 않는 데이터 (short, long, int, char 등)을 리터럴이라 부름 - 문자열을 자바에서는 리터럴로 표현
심볼릭 상수
: "이름" 이 있는 상수
: 자료형 앞에 final 을 붙인다
(final int mun2 = 4; -> 자료형 앞에 붙이면 됨)