02.26

<단축키>----------------------------
자동 import : ctrl+shift+o 
 자동 formatting : ctrl+shift+f
--------------------------------------

형변환(TypeChange)
자동형변환(암시적 형변환)
: 변수 간 연산처리
- 낮은 자료형으로 맞출 때

byte > short,char > int > long > float > double
(long:8byte / float:4byte 이지만 일반적으로 메모리 설계상 정수 타입보다 실수 타입이 더 크게 되어 있기 때문에 long 보다 float이 더 크다-float은 부동소수점 방식표현으로 )

강제형변환(명시적 형변환)
- 높은 자료형으로 맞출 때
- 큰 데이터를 작은 데이터 타입으로 옮길 때 데이터 손실이 일어날 수 있음
- 실수 타입을 정수 타입으로 강제 변환하여 소수점 이하의 데이터들은 버려짐

정수연산식
- int 보다 long 으로 자동 형 변환
실수연산식
- 큰 타입으로 자동형변환

String
string -> int 로 변환시(문자 -> 숫자로 변환)
Integer.parselnt() : 문자열 파싱하여 int 객체 생성
double / short / long 도 가능 
(Double.parseDouble / Short.parseShort / Long.parseLong)
char는 integer가 없음

--------------------------------------------------------------------------------
Scanner
- 스트림(stream) : 단방향성 / 데이터의 이동 통로

- 표준입력 스트림(System.in) : 키보드 
 
- 표준출력 스트림(System.out) : 모니터

- 코드 해석 : 

nextLine : 띄어쓰기를 기준으로 입력 값을 읽고 나타냄
enter키를 입력하는 순간 문자를 처리하지 못하고 버퍼에 남겨 두게 됨

Buffer : 한번에 옮기는
- 컴퓨터에 입력받는 값이 많으면 많을 수록 사용하여 데이터를 입출력 하는게
Scanner를 통해 하나하나 출력하는것보다 훨씬 빠름
- enter키를 사용하면 경계로 인식하기 때문 중간에 띄어쓰기라도 하는 경우 데이터를 가공해주어야 함

--------------------------------------------------------------------------------
연산자

Thread.sleep 
